var VueHeightCollapsible=function(t){"use strict";function r(t){return t&&"object"==typeof t&&"default"in t?t:{default:t}}var e=r(t);function n(t,r){return function(t){if(Array.isArray(t))return t}(t)||function(t,r){if("undefined"==typeof Symbol||!(Symbol.iterator in Object(t)))return;var e=[],n=!0,o=!1,u=void 0;try{for(var a,i=t[Symbol.iterator]();!(n=(a=i.next()).done)&&(e.push(a.value),!r||e.length!==r);n=!0);}catch(t){o=!0,u=t}finally{try{n||null==i.return||i.return()}finally{if(o)throw u}}return e}(t,r)||function(t,r){if(!t)return;if("string"==typeof t)return o(t,r);var e=Object.prototype.toString.call(t).slice(8,-1);"Object"===e&&t.constructor&&(e=t.constructor.name);if("Map"===e||"Set"===e)return Array.from(t);if("Arguments"===e||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(e))return o(t,r)}(t,r)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function o(t,r){(null==r||r>t.length)&&(r=t.length);for(var e=0,n=new Array(r);e<r;e++)n[e]=t[e];return n}var u=function(){var t=e.default;return t.install=function(r){r.component("VueCollapsible3",t)},t}(),a=Object.freeze({__proto__:null,default:u});return Object.entries(a).forEach((function(t){var r=n(t,2),e=r[0],o=r[1];"default"!==e&&(u[e]=o)})),u}(component$1);